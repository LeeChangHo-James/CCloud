[유니티 게임이 설치된 기기의 정보 알아내는 방법]
● SystemInfo 클래스
  ▶ SystemInfo 클래스는 유니티 게임이 설치된 기기의 시스템, 하드웨어 정보를 가지고 있다.
     ▶ SystemInfo 클래스에 정의된 정적 변수들을 사용

● SystemInfo.deviceModel
  ▶ 현재 설치된 기기의 모델명을 알 수 있다.
     ▶ IPhone = "iPhone6"과 같이 나온다.
     ▶ Android = 설정에 나오는 모델명이 나온다.

● SystemInfo.deviceType
  ▶ 현재 설치된 기기의 유형(스마트폰, 타블릿, PC등)을 알 수 있다.
     ▶ DeviceType이라는 열거형(enum)을 사용
        ▶ DeviceType의 값들은 4개 존재
           ▶ DeviceType.Unknown : 알 수 없음
           ▶ DeviceType.Handheld : 태블릿, 스마트폰과 같은 기기
           ▶ DeviceType.Console : XBOX와 같은 콘솔 게임기
           ▶ DeviecType.Desktop : 일반적인 컴퓨터(노트북 포함)
              ▶ 스마트폰인지 태블릿인지 알기 위해서는 스크린의 픽셀을 기준으로 결정
                 ▶ 태블릿과 스마트폰의 경계가 모호하기 때문 (엄밀하게 말하면 DPI도 고려해야 하지만 픽셀로도 충분)
                 ▶ 유니티 게임의 너비와 높이는 Screen 클래스를 사용
                    ▶ ex)
                       if ( Mathf.Max( Screen.width, Screen.height) > 1000 ) { isTablet == true; }

● Application 클래스
  ▶ Application 클래스는 유니티 게임이 설치된 환경에 대한 정보를 가지고 있다.
     ▶ SystemInfo 클래스가 플랫폼의 운영체제 정보를 가져오는 것이라면, Application 클래스는 현재 유니티 게임의 런타임 데이터를 가지고 있다.
     ▶ 현재 유니티 게임이 포커스를 가지고 있는 상태인지 아닌지의 관한 정보를 가지고 있다.

= 두 클래스 모두 주로 메소드가 아니라 변수를 가지고 있기 때문에 쉽게 사용할 수 있다.

● Application.isMobilePlatform / Application.isConsolePlatform
  ▶ 각각 모바일 플랫폼인지 콘솔 플랫폼인지를 알려주는 bool 타입의 정적 변수

● Application.platform
  ▶ 위의 두 변수보다 더 세부적인 정보를 알 수 있다.
     ▶ RuntimePlatform.OSXEditor : OSX 유니티 에디터에서 실행
     ▶ RuntimePlatform.OSXPlayer 
     ▶ RuntimePlatform.WindowsPlayer
     ▶ RuntimePlatform.WindowsEditor : 윈도우 유니티 에디터에서 실행
     ▶ RuntimePlatform.IPhonePlayer
     ▶ RuntimePlatform.Android
     ▶ RuntimePlatform.LinuxPlayer
     ▶ RuntimePlatform.LinuxEditor : 리눅스 유니티 에디터에서 실행
     ▶ RuntimePlatform.WebGLPlayer
     ▶ RuntimePlatform.WSAPlayerX86 : X86 프로세서에서 동작하는 윈도우 스토어 앱
     ▶ RuntimePlatform.WSAPlayerX64 : X64 프로세서에서 동작하는 윈도우 스토어 앱
     ▶ RuntimePlatform.WSAPlayerARM : ARM 프로세서에서 동작하는 윈도우 스토어 앱
     ▶ RuntimePlatform.PSP2
     ▶ RuntimePlatform.PS4
     ▶ RuntimePlatform.XboxOne
     ▶ RuntimePlatform.WiiU
     ▶ RuntimePlatform.tvOS
     ▶ RuntimePlatform.Switch